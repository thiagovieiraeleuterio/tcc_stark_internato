package tcc.internato.model;

import java.util.Date;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Vistoria.java
//  @ Date : 04/10/2016
//  @ Author : 
//
//
@Entity
@Table(name = "vistoria")
@PrimaryKeyJoinColumn(name = "id_vistoria")
public class Vistoria extends EntidadeBase {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;

	@Column(nullable = false)
	public Date data;

	@Column(name = "nota_limpeza", nullable = false)
	public int notaLimpeza;

	// // RELACIONAMENTOS ...
	//
	// Uma vistoria está associado a um quarto.
	@OneToOne(optional = false, fetch = FetchType.LAZY, cascade = { CascadeType.REFRESH })
	@JoinColumn(name = "quarto_fk", nullable = false, unique = true)
	private Quarto quartos;

	// Uma vistoria está associado a um Servidor.
	@OneToOne(optional = false, fetch = FetchType.LAZY, cascade = { CascadeType.REFRESH })
	@JoinColumn(name = "servidor_fk", nullable = false, unique = true)
	private Servidor servidores;

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public Date getData() {
		return data;
	}

	public void setData(Date data) {
		this.data = data;
	}

	public int getNotaLimpeza() {
		return notaLimpeza;
	}

	public void setNotaLimpeza(int notaLimpeza) {
		this.notaLimpeza = notaLimpeza;
	}

	public Quarto getQuartos() {
		return quartos;
	}

	public void setQuartos(Quarto quartos) {
		this.quartos = quartos;
	}

	public Servidor getServidores() {
		return servidores;
	}

	public void setServidores(Servidor servidores) {
		this.servidores = servidores;
	}

	// // um vistoria está associada a 0 ou muitos atos indisciplinares.
	// @OneToMany(cascade = CascadeType.REFRESH, targetEntity = Interno.class,
	// fetch = FetchType.LAZY, mappedBy = "vistoria")
	// private List<AtoIndisciplinar> atosIndisciplinares;
	//

	// GETTERS E SETTERS ...
}
