package tcc.internato.model;

import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Interno.java
//  @ Date : 04/10/2016
//  @ Author : 
//
//

@Entity
@Table(name = "interno")
@PrimaryKeyJoinColumn(name = "id_interno")
public class Interno extends Pessoa {

	@Column(nullable = false)
	private String curso;

	@Column(nullable = false)
	private Integer idade;

	@Column(name = "dt_nasc")
	private Date dtNasc;

	// TODO definir tamanho de Strings
	@Column(length = 10)
	private String contaBanco;

	@Column
	private String agencia;

	@Column
	private String banco;

	@Column
	private Integer diaLimpeza;

	@Column(nullable = false)
	private String motivo;

	@Column
	public String problemaSaude;

	@Column
	public Boolean desistencia;

	@Column
	@Temporal(TemporalType.DATE)
	public Date dataSaida;

	// // RELACIONAMENTOS
	//
	// Um interno possui um ou muitos atos indisciplinares.
	@OneToMany(fetch = FetchType.LAZY, targetEntity = AtoIndisciplinar.class, mappedBy = "internos")
	private List<AtoIndisciplinar> atoindisciplinares;
	//
	// Um interno possui um pais.
	@OneToOne(optional = false, fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE })
	@JoinColumn(name = "pais_fk", nullable = false)
	private Pais pais;

	// Um interno possui um endereço.
	@OneToOne(optional = false, fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE })
	@JoinColumn(name = "endereco_fk", nullable = false)
	private Endereco endereco;

	// Um interno está associado a um quarto.
	@OneToOne(optional = false, fetch = FetchType.EAGER, targetEntity = Quarto.class, cascade = { CascadeType.PERSIST,
			CascadeType.MERGE })
	@JoinColumn(name = "quarto_fk", nullable = false)
	private Quarto quarto;

	// Um interno esta em várias chamada.
	// @OneToOne(optional = false, fetch = FetchType.LAZY, cascade = {
	// CascadeType.REFRESH })
	// @JoinColumn(name = "chamada_fk", nullable = false)
	// private List<Chamada> chamadas;
	// TODO corrigir mapeamento acima

	public Interno() {
		// setChamadas(new ArrayList<Chamada>());
	}

	public String getCurso() {
		return curso;
	}

	public void setCurso(String curso) {
		this.curso = curso;
	}

	public Integer getIdade() {
		return idade;
	}

	public void setIdade(Integer idade) {
		this.idade = idade;
	}

	public Date getDtNasc() {
		return dtNasc;
	}

	public void setDtNasc(Date dtNasc) {
		this.dtNasc = dtNasc;
	}

	public String getContaBanco() {
		return contaBanco;
	}

	public void setContaBanco(String contaBanco) {
		this.contaBanco = contaBanco;
	}

	public String getAgencia() {
		return agencia;
	}

	public void setAgencia(String agencia) {
		this.agencia = agencia;
	}

	public String getBanco() {
		return banco;
	}

	public void setBanco(String banco) {
		this.banco = banco;
	}

	public Integer getDiaLimpeza() {
		return diaLimpeza;
	}

	public void setDiaLimpeza(Integer diaLimpeza) {
		this.diaLimpeza = diaLimpeza;
	}

	public String getMotivo() {
		return motivo;
	}

	public void setMotivo(String motivo) {
		this.motivo = motivo;
	}

	public String getProblemaSaude() {
		return problemaSaude;
	}

	public void setProblemaSaude(String problemaSaude) {
		this.problemaSaude = problemaSaude;
	}

	public Boolean getDesistencia() {
		return desistencia;
	}

	public void setDesistencia(Boolean desistencia) {
		this.desistencia = desistencia;
	}

	public Date getDataSaida() {
		return dataSaida;
	}

	public void setDataSaida(Date dataSaida) {
		this.dataSaida = dataSaida;
	}

	public List<AtoIndisciplinar> getAtoindisciplinares() {
		return atoindisciplinares;
	}

	public void setAtoindisciplinares(List<AtoIndisciplinar> atoindisciplinares) {
		this.atoindisciplinares = atoindisciplinares;
	}

	public Pais getPais() {
		return pais;
	}

	public void setPais(Pais pais) {
		this.pais = pais;
	}

	public Endereco getEndereco() {
		return endereco;
	}

	public void setEndereco(Endereco endereco) {
		this.endereco = endereco;
	}

	public Quarto getQuarto() {
		return quarto;
	}

	public void setQuarto(Quarto quarto) {
		this.quarto = quarto;
	}

	// GETTERS E SETTERS

}
